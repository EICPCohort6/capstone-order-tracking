openapi: 3.0.3
info:
  title: Order Tracker API
  description: |-
    This is an API for the EIC Cohort 6 Order Tracking Capstone project.
    Some useful links:
    - [The Order Tracker repository](https://github.com/EICPCohort6/capstone-order-tracking)
    - [The Capstone Project assignment](https://github.com/EICPCohort6/capstone-details)
  version: 1.0.0
servers:
  - url: https://FILLER.com/
paths:
  /customers:
    get:
      summary: Returns a list of all customers.
      responses:
        "200": #status code
          description: A JSON array of customers.
    post:
      summary: Creates a new customer.
      responses:
        "201":
          description: Created
  /customers/{id}:
    get:
      summary: Return a customer by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of customer.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified customer ID is invalid (NaN)
        "404":
          description: A customer with the specified ID was not found.
    put:
      summary: Modify an existing customer.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of customer.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified customer ID is invalid (NaN)
        "404":
          description: A customer with the specified ID was not found.
    delete:
      summary: Remove a customer.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of customer.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified customer ID is invalid (NaN)
        "404":
          description: A customer with the specified ID was not found.

  /customers/{last_name}:
    get:
      summary: Return a customer by last name.
      parameters:
        - name: last_name
          in: path
          required: true
          description: Last name of customer.
          schema:
            type: string
      responses:
        "200":
          description: OK
        "400":
          description: The specified customer last name is invalid (Not a string)
        "404":
          description: A customer with the specified last name was not found.
  /orders:
    get:
      summary: Returns a list of all orders.
      responses:
        "200":
          description: A JSON array of orders.
    post:
      summary: Creates a new order.
      responses:
        "201":
          description: Created
  /orders/{id}:
    get:
      summary: Return an order by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of an order.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified order ID is invalid (NaN)
        "404":
          description: An order with the specified ID was not found.
    put:
      summary: Modify an existing order.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of an order.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified order ID is invalid (NaN)
        "404":
          description: An order with the specified ID was not found.
    delete:
      summary: Delete a draft order.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of an order.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified order ID is invalid (NaN)
        "404":
          description: An order with the specified ID was not found.
  /products:
    get:
      summary: Returns a list of products.
      responses:
        "200":
          description: A JSON array of products.
  /products/{id}:
    get:
      summary: Get a specific product.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of a product.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified product ID is invalid (NaN)
        "404":
          description: A product with the specified ID was not found
    put:
      summary: Modify a product.
      parameters:
        - name: id
          in: path
          required: true
          description: Unique ID of a product.
          schema:
            type: integer
      responses:
        "200":
          description: OK
        "400":
          description: The specified product ID is invalid (NaN)
        "404":
          description: A product with the specified ID was not found.
